{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:4000';\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl + '/todos');\n    return todos;\n  } catch (error) {\n    console.log(error);\n    throw new Error(\"error\");\n  }\n};\nexport const addTodo = async formData => {\n  try {\n    // const todo: Omit<ITodo, '_id'> = {\n    //   name: formData.name,\n    //   description: formData.description,\n    //   status: false,\n    // }\n    const saveTodo = await axios.post(baseUrl + '/add-todo', {\n      name: formData.name,\n      description: formData.description,\n      status: false\n    });\n    return saveTodo;\n  } catch (error) {\n    throw new Error(\"error\");\n  }\n};\nexport const deleteTodo = async _id => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/delete-todo/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(\"error\");\n  }\n};","map":{"version":3,"names":["axios","baseUrl","getTodos","todos","get","error","console","log","Error","addTodo","formData","saveTodo","post","name","description","status","deleteTodo","_id","deletedTodo","delete"],"sources":["C:/Users/User/Desktop/ToDoList/all/client/src/API.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios'\n\nconst baseUrl: string = 'http://localhost:4000'\n\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\n      baseUrl + '/todos'\n    )\n    return todos\n  } catch (error) {\n    console.log(error)\n    throw new Error(\"error\")\n  }\n}\n\nexport const addTodo = async (\n  formData: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    // const todo: Omit<ITodo, '_id'> = {\n    //   name: formData.name,\n    //   description: formData.description,\n    //   status: false,\n    // }\n    const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n      baseUrl + '/add-todo',\n     { name: formData.name,description: formData.description, status: false}\n    )\n    return saveTodo\n  } catch (error) {\n    throw new Error(\"error\")\n  }\n}\n\nexport const deleteTodo = async (\n  _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n      `${baseUrl}/delete-todo/${_id}`\n    )\n    return deletedTodo\n  } catch (error) {\n    throw new Error(\"error\")\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAiD;EACvE,IAAI;IACF,MAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC9CH,OAAO,GAAG,QADoC,CAAhD;IAGA,OAAOE,KAAP;EACD,CALD,CAKE,OAAOE,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,MAAM,IAAIG,KAAJ,CAAU,OAAV,CAAN;EACD;AACF,CAVM;AAYP,OAAO,MAAMC,OAAO,GAAG,MACrBC,QADqB,IAEmB;EACxC,IAAI;IACF;IACA;IACA;IACA;IACA;IACA,MAAMC,QAAoC,GAAG,MAAMX,KAAK,CAACY,IAAN,CACjDX,OAAO,GAAG,WADuC,EAElD;MAAEY,IAAI,EAAEH,QAAQ,CAACG,IAAjB;MAAsBC,WAAW,EAAEJ,QAAQ,CAACI,WAA5C;MAAyDC,MAAM,EAAE;IAAjE,CAFkD,CAAnD;IAIA,OAAOJ,QAAP;EACD,CAXD,CAWE,OAAON,KAAP,EAAc;IACd,MAAM,IAAIG,KAAJ,CAAU,OAAV,CAAN;EACD;AACF,CAjBM;AAmBP,OAAO,MAAMQ,UAAU,GAAG,MACxBC,GADwB,IAEgB;EACxC,IAAI;IACF,MAAMC,WAAuC,GAAG,MAAMlB,KAAK,CAACmB,MAAN,CACnD,GAAElB,OAAQ,gBAAegB,GAAI,EADsB,CAAtD;IAGA,OAAOC,WAAP;EACD,CALD,CAKE,OAAOb,KAAP,EAAc;IACd,MAAM,IAAIG,KAAJ,CAAU,OAAV,CAAN;EACD;AACF,CAXM"},"metadata":{},"sourceType":"module"}