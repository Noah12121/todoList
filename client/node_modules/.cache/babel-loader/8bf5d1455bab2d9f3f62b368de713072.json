{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ToDoList\\\\all\\\\client\\\\src\\\\components\\\\TodoItem.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  let {\n    todo,\n    updateTodo,\n    deleteTodo\n  } = _ref;\n  const checkTodo = todo.status ? `line-through` : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card--text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: checkTodo,\n        children: todo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: checkTodo,\n        children: todo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card--button\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateTodo(todo),\n        className: todo.status ? `hide-button` : 'Card--button__done',\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTodo(todo._id),\n        className: \"Card--button__delete\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","Todo","todo","updateTodo","deleteTodo","checkTodo","status","name","description","_id"],"sources":["C:/Users/User/Desktop/ToDoList/all/client/src/components/TodoItem.tsx"],"sourcesContent":["import React from 'react'\n\ntype Props = TodoProps & {\n    updateTodo: (todo: ITodo) => void\n    deleteTodo: (_id: string) => void\n}\n\nconst Todo: React.FC<Props> = ({ todo, updateTodo, deleteTodo }) => {\n  const checkTodo: string = todo.status ? `line-through` : ''\n  return (\n    <div className='Card'>\n      <div className='Card--text'>\n        <h1 className={checkTodo}>{todo.name}</h1>\n        <span className={checkTodo}>{todo.description}</span>\n      </div>\n      <div className='Card--button'>\n        <button\n          onClick={() => updateTodo(todo)}\n          className={todo.status ? `hide-button` : 'Card--button__done'}\n        >\n          Complete\n        </button>\n        <button\n          onClick={() => deleteTodo(todo._id)}\n          className='Card--button__delete'\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Todo\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAOA,MAAMC,IAAqB,GAAG,QAAsC;EAAA,IAArC;IAAEC,IAAF;IAAQC,UAAR;IAAoBC;EAApB,CAAqC;EAClE,MAAMC,SAAiB,GAAGH,IAAI,CAACI,MAAL,GAAe,cAAf,GAA+B,EAAzD;EACA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAK,SAAS,EAAC,YAAf;MAAA,wBACE;QAAI,SAAS,EAAED,SAAf;QAAA,UAA2BH,IAAI,CAACK;MAAhC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAM,SAAS,EAAEF,SAAjB;QAAA,UAA6BH,IAAI,CAACM;MAAlC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QACE,OAAO,EAAE,MAAML,UAAU,CAACD,IAAD,CAD3B;QAEE,SAAS,EAAEA,IAAI,CAACI,MAAL,GAAe,aAAf,GAA8B,oBAF3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QACE,OAAO,EAAE,MAAMF,UAAU,CAACF,IAAI,CAACO,GAAN,CAD3B;QAEE,SAAS,EAAC,sBAFZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAxBD;;KAAMR,I;AA0BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}