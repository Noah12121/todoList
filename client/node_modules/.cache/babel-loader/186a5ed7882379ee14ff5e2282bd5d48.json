{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ToDoList\\\\all\\\\client\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport TodoItem from './components/TodoItem';\nimport AddTodo from './components/AddTodo';\n\nconst App = () => {\n  // const [todos, setTodos] = useState<ITodo[]>([])\n  // useEffect(() => {\n  //   fetchTodos()\n  // }, [])\n  // const fetchTodos = (): void => {\n  //   getTodos()\n  //   .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n  //   .catch((err: Error) => console.log(err))\n  // }\n  //  const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n  //    e.preventDefault()\n  //    addTodo(formData)\n  //    .then(({ status, data }) => {\n  //     if (status !== 201) {\n  //       throw new Error('Error! Todo not saved')\n  //     }\n  //     setTodos(data.todos)\n  //   })\n  //   .catch((err) => console.log(err))\n  // }\n  // const handleUpdateTodo = (todo: ITodo): void => {\n  //   updateTodo(todo)\n  //   .then(({ status, data }) => {\n  //       if (status !== 200) {\n  //         throw new Error('Error! Todo not updated')\n  //       }\n  //       setTodos(data.todos)\n  //     })\n  //     .catch((err) => console.log(err))\n  // }\n  // const handleDeleteTodo = (_id: string): void => {\n  //   deleteTodo(_id)\n  //   .then(({ status, data }) => {\n  //       if (status !== 200) {\n  //         throw new Error('Error! Todo not deleted')\n  //       }\n  //       setTodos(data.todos)\n  //     })\n  //     .catch((err) => console.log(err))\n  // }\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"***********\", /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"My Todos\"), /*#__PURE__*/React.createElement(AddTodo, {\n    saveTodo: handleSaveTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), todos.map(todo => /*#__PURE__*/React.createElement(TodoItem, {\n    key: todo._id,\n    updateTodo: handleUpdateTodo,\n    deleteTodo: handleDeleteTodo,\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"names":["React","TodoItem","AddTodo","App","handleSaveTodo","todos","map","todo","_id","handleUpdateTodo","handleDeleteTodo"],"sources":["C:/Users/User/Desktop/ToDoList/all/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport TodoItem from './components/TodoItem'\nimport AddTodo from './components/AddTodo'\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './API'\n\nconst App: React.FC = () => {\n  // const [todos, setTodos] = useState<ITodo[]>([])\n\n  // useEffect(() => {\n  //   fetchTodos()\n  // }, [])\n\n  // const fetchTodos = (): void => {\n  //   getTodos()\n  //   .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n  //   .catch((err: Error) => console.log(err))\n  // }\n\n//  const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n//    e.preventDefault()\n//    addTodo(formData)\n//    .then(({ status, data }) => {\n//     if (status !== 201) {\n//       throw new Error('Error! Todo not saved')\n//     }\n//     setTodos(data.todos)\n//   })\n//   .catch((err) => console.log(err))\n// }\n\n  // const handleUpdateTodo = (todo: ITodo): void => {\n  //   updateTodo(todo)\n  //   .then(({ status, data }) => {\n  //       if (status !== 200) {\n  //         throw new Error('Error! Todo not updated')\n  //       }\n  //       setTodos(data.todos)\n  //     })\n  //     .catch((err) => console.log(err))\n  // }\n\n  // const handleDeleteTodo = (_id: string): void => {\n  //   deleteTodo(_id)\n  //   .then(({ status, data }) => {\n  //       if (status !== 200) {\n  //         throw new Error('Error! Todo not deleted')\n  //       }\n  //       setTodos(data.todos)\n  //     })\n  //     .catch((err) => console.log(err))\n  // }\n\n  return (\n    <main className='App'>\n      ***********\n      <h1>My Todos</h1>\n      <AddTodo saveTodo={handleSaveTodo} />\n      {todos.map((todo: ITodo) => (\n        <TodoItem\n          key={todo._id}\n          updateTodo={handleUpdateTodo}\n          deleteTodo={handleDeleteTodo}\n          todo={todo}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default App\n"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAGA,MAAMC,GAAa,GAAG,MAAM;EAC1B;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,oBACE;IAAM,SAAS,EAAC,KAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,+BAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAFF,eAGE,oBAAC,OAAD;IAAS,QAAQ,EAAEC,cAAnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,EAIGC,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT,oBAAC,QAAD;IACE,GAAG,EAAEA,IAAI,CAACC,GADZ;IAEE,UAAU,EAAEC,gBAFd;IAGE,UAAU,EAAEC,gBAHd;IAIE,IAAI,EAAEH,IAJR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADD,CAJH,CADF;AAeD,CA9DD;;AAgEA,eAAeJ,GAAf"},"metadata":{},"sourceType":"module"}