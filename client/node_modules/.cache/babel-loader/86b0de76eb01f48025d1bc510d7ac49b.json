{"ast":null,"code":"const baseUrl = 'http://localhost:4000';\nexport const getTodos = {// const todos: [];\n  //   return todos;\n}; // export const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const todos: AxiosResponse<ApiDataType> = await axios.get(\n//       baseUrl + '/todos'\n//     )\n//     return todos\n//   } catch (error) {\n//     // throw new Error(error)\n//   }\n// }\n// export const addTodo = async (\n//   formData: ITodo\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const todo: Omit<ITodo, '_id'> = {\n//       name: formData.name,\n//       description: formData.description,\n//       status: false,\n//     }\n//     const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n//       baseUrl + '/add-todo',\n//       todo\n//     )\n//     return saveTodo\n//   } catch (error) {\n//     // throw new Error(error)\n//   }\n// }\n// export const updateTodo = async (\n//   todo: ITodo\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const todoUpdate: Pick<ITodo, 'status'> = {\n//       status: true,\n//     }\n//     const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\n//       `${baseUrl}/edit-todo/${todo._id}`,\n//       todoUpdate\n//     )\n//     return updatedTodo\n//   } catch (error) {\n//     // throw new Error(error)\n//   }\n// }\n// export const deleteTodo = async (\n//   _id: string\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n//       `${baseUrl}/delete-todo/${_id}`\n//     )\n//     return deletedTodo\n//   } catch (error) {\n//     // throw new Error(error)\n//   }\n// }","map":{"version":3,"names":["baseUrl","getTodos"],"sources":["C:/Users/User/Desktop/ToDoList/all/client/src/API.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios'\n\nconst baseUrl: string = 'http://localhost:4000'\nexport const getTodos =  {\n  // const todos: [];\n  //   return todos;\n \n}\n// export const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const todos: AxiosResponse<ApiDataType> = await axios.get(\n//       baseUrl + '/todos'\n//     )\n//     return todos\n//   } catch (error) {\n//     // throw new Error(error)\n//   }\n// }\n\n// export const addTodo = async (\n//   formData: ITodo\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const todo: Omit<ITodo, '_id'> = {\n//       name: formData.name,\n//       description: formData.description,\n//       status: false,\n//     }\n//     const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n//       baseUrl + '/add-todo',\n//       todo\n//     )\n//     return saveTodo\n//   } catch (error) {\n//     // throw new Error(error)\n//   }\n// }\n\n// export const updateTodo = async (\n//   todo: ITodo\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const todoUpdate: Pick<ITodo, 'status'> = {\n//       status: true,\n//     }\n//     const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\n//       `${baseUrl}/edit-todo/${todo._id}`,\n//       todoUpdate\n//     )\n//     return updatedTodo\n//   } catch (error) {\n//     // throw new Error(error)\n//   }\n// }\n\n// export const deleteTodo = async (\n//   _id: string\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n//       `${baseUrl}/delete-todo/${_id}`\n//     )\n//     return deletedTodo\n//   } catch (error) {\n//     // throw new Error(error)\n//   }\n// }\n"],"mappings":"AAEA,MAAMA,OAAe,GAAG,uBAAxB;AACA,OAAO,MAAMC,QAAQ,GAAI,CACvB;EACA;AAFuB,CAAlB,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}